@using System.Xml.Serialization



<Div Display="Display"
     Margin="Margin"
     TextAlignment="TextAlignment.Center"
     VerticalAlignment="VerticalAlignment.Middle"
     Style="@SizeStyle">

    @if(!string.IsNullOrWhiteSpace(Src))
    {
        <Image Source="@Src" alt="@Alt" Border="@Border" Style="@SizeStyle"/>
        
    }
    else
    {
        <DefaultAvatar Style="height:100%"></DefaultAvatar>
    }
   
</Div>


@code {


    readonly MeasureValue _extraSmallSize = 2.rem();
    readonly MeasureValue _smallSize = 2.5.rem();
    readonly MeasureValue _defaultSize = 3.rem();
    readonly MeasureValue _mediumSize = 3.5.rem();
    readonly MeasureValue _largeSize = 4.rem();
    readonly MeasureValue _extraLargeSize = 4.5.rem();

    string SizeStyle => Size switch
    {
        Size.Default => $"Width:{_defaultSize};height: {_defaultSize}",
        Size.ExtraSmall => $"Width:{_extraSmallSize};height: {_extraSmallSize}",
        Size.Small => $"Width:{_smallSize};height: {_smallSize}",
        Size.Medium => $"Width:{_mediumSize};height: {_mediumSize}",
        Size.Large => $"Width:{_largeSize};height: {_largeSize}",
        Size.ExtraLarge => $"Width:{_extraLargeSize};height: {_extraLargeSize}",
        _ => throw new ArgumentOutOfRangeException()

    };

    [Parameter]
    public string Src { get; set; }



    [Parameter]
    public IFluentBorder Border { get; set; } = Blazorise.Border.RoundedCircle;

    [Parameter]
    public string Alt { get; set; } = "";

    [Parameter]
    public Size Size { get; set; }

    [Parameter]
    public IFluentDisplay Display { get; set; } = BDisplay.InlineBlock;

    [Parameter]
    public IFluentSpacing Margin { get; set; } = BMargin.Is1.FromEnd.Is1.FromBottom;

}